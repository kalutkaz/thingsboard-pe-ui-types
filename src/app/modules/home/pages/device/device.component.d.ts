import { ChangeDetectorRef } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { FormBuilder, FormGroup } from '@angular/forms';
import { Device } from '@shared/models/device.models';
import { DeviceCredentials, DeviceProfileInfo } from '@shared/models/device.models';
import { EntityType } from '@shared/models/entity-type.models';
import { TranslateService } from '@ngx-translate/core';
import { DeviceService } from '@core/http/device.service';
import { ClipboardService } from 'ngx-clipboard';
import { GroupEntityTableConfig } from '@home/models/group/group-entities-table-config.models';
import { GroupEntityComponent } from '@home/components/group/group-entity.component';
import { Subject } from 'rxjs';
import { OtaUpdateType } from '@shared/models/ota-package.models';
import * as i0 from "@angular/core";
export declare class DeviceComponent extends GroupEntityComponent<Device> {
    protected store: Store<AppState>;
    protected translate: TranslateService;
    private deviceService;
    private clipboardService;
    protected entityValue: Device;
    protected entitiesTableConfigValue: GroupEntityTableConfig<Device>;
    protected fb: FormBuilder;
    protected cd: ChangeDetectorRef;
    entityType: typeof EntityType;
    deviceCredentials$: Subject<DeviceCredentials>;
    otaUpdateType: typeof OtaUpdateType;
    constructor(store: Store<AppState>, translate: TranslateService, deviceService: DeviceService, clipboardService: ClipboardService, entityValue: Device, entitiesTableConfigValue: GroupEntityTableConfig<Device>, fb: FormBuilder, cd: ChangeDetectorRef);
    ngOnInit(): void;
    hideDelete(): boolean;
    hideAssignmentActions(): boolean;
    hideManageCredentials(): boolean;
    buildForm(entity: Device): FormGroup;
    updateForm(entity: Device): void;
    onDeviceIdCopied($event: any): void;
    onDeviceProfileUpdated(): void;
    onDeviceProfileChanged(deviceProfile: DeviceProfileInfo): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DeviceComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DeviceComponent, "tb-device", never, {}, {}, never, never>;
}
