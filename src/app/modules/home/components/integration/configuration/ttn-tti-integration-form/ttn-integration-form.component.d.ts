import { ControlValueAccessor, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, ValidationErrors, Validator } from '@angular/forms';
import { IntegrationForm } from '@home/components/integration/configuration/integration-form';
import { ThingsStartHostType } from '@home/components/integration/integration.models';
import { IntegrationCredentialType, TtnIntegration } from '@shared/models/integration.models';
import * as i0 from "@angular/core";
export declare class TtnIntegrationFormComponent extends IntegrationForm implements ControlValueAccessor, Validator {
    protected fb: UntypedFormBuilder;
    ttnIntegrationConfigForm: UntypedFormGroup;
    hostEdit: UntypedFormControl;
    apiVersion: UntypedFormControl;
    ThingsStartHostType: typeof ThingsStartHostType;
    ThingsStartHostTypes: (string | ThingsStartHostType)[];
    ThingsStartHostTypeTranslation: Map<ThingsStartHostType, string>;
    IntegrationCredentialType: typeof IntegrationCredentialType;
    hostRegionSuffix: string;
    hideSelectVersion: boolean;
    userNameLabel: string;
    userNameRequired: string;
    passwordLabel: string;
    passwordRequired: string;
    private downlinkPattern;
    private propagateChange;
    constructor(fb: UntypedFormBuilder);
    writeValue(value: TtnIntegration): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    private updateModels;
    validate(): ValidationErrors | null;
    private buildHostName;
    private updateTtnVersionState;
    private updateDownlinkPattern;
    updatedValidationPrivateNetwork(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TtnIntegrationFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TtnIntegrationFormComponent, "tb-ttn-integration-form", never, {}, {}, never, never, false>;
}
