import { OnInit } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { DatePipe } from '@angular/common';
import { MatDialog } from '@angular/material/dialog';
import { EntityId } from '@shared/models/id/entity-id';
import { EntitiesTableComponent } from '@home/components/entity/entities-table.component';
import { DialogService } from '@core/services/dialog.service';
import { AlarmTableConfig } from './alarm-table-config';
import { AlarmService } from '@app/core/http/alarm.service';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import * as i0 from "@angular/core";
export declare class AlarmTableComponent implements OnInit {
    private alarmService;
    private dialogService;
    private userPermissionsService;
    private translate;
    private datePipe;
    private dialog;
    private store;
    activeValue: boolean;
    dirtyValue: boolean;
    entityIdValue: EntityId;
    set active(active: boolean);
    set entityId(entityId: EntityId);
    private readonlyValue;
    get readonly(): boolean;
    set readonly(value: boolean);
    entitiesTable: EntitiesTableComponent;
    alarmTableConfig: AlarmTableConfig;
    constructor(alarmService: AlarmService, dialogService: DialogService, userPermissionsService: UserPermissionsService, translate: TranslateService, datePipe: DatePipe, dialog: MatDialog, store: Store<AppState>);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AlarmTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AlarmTableComponent, "tb-alarm-table", never, { "active": "active"; "entityId": "entityId"; "readonly": "readonly"; }, {}, never, never, false>;
}
