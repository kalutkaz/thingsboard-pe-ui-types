import { AfterViewInit, ElementRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { Store } from '@ngrx/store';
import { AppState } from '@app/core/core.state';
import { EntityId } from '@shared/models/id/entity-id';
import { EntityService } from '@core/http/entity.service';
import { EntityGroupService } from '@core/http/entity-group.service';
import { ContactBased } from '@shared/models/contact-based.model';
import * as i0 from "@angular/core";
export declare class OwnerAutocompleteComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges {
    private store;
    private entityService;
    private entityGroupService;
    private fb;
    selectOwnerFormGroup: UntypedFormGroup;
    modelValue: EntityId | null;
    excludeOwnerIds: Array<string>;
    placeholderText: string;
    notFoundText: string;
    requiredText: string;
    private requiredValue;
    get required(): boolean;
    set required(value: boolean);
    disabled: boolean;
    ownerInput: ElementRef<HTMLInputElement>;
    filteredOwners: Observable<Array<ContactBased<EntityId>>>;
    searchText: string;
    private dirty;
    private excludeOwnerIdsChanged;
    private propagateChange;
    constructor(store: Store<AppState>, entityService: EntityService, entityGroupService: EntityGroupService, fb: UntypedFormBuilder);
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: EntityId | null): void;
    onFocus(): void;
    reset(): void;
    updateView(value: EntityId | null): void;
    displayOwnerFn(owner?: ContactBased<EntityId>): string | undefined;
    fetchOwners(searchText?: string): Observable<Array<ContactBased<EntityId>>>;
    clear(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<OwnerAutocompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OwnerAutocompleteComponent, "tb-owner-autocomplete", never, { "excludeOwnerIds": "excludeOwnerIds"; "placeholderText": "placeholderText"; "notFoundText": "notFoundText"; "requiredText": "requiredText"; "required": "required"; "disabled": "disabled"; }, {}, never, never, false>;
}
