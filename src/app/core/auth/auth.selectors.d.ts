import { Store } from '@ngrx/store';
import { AppState } from '../core.state';
import { AuthState } from './auth.models';
import { AuthUser } from '@shared/models/user.model';
export declare const selectAuthState: import("@ngrx/store").MemoizedSelector<AppState, AuthState, import("@ngrx/store").DefaultProjectorFn<AuthState>>;
export declare const selectAuth: import("@ngrx/store").MemoizedSelector<AppState, AuthState, import("@ngrx/store").DefaultProjectorFn<AuthState>>;
export declare const selectIsAuthenticated: import("@ngrx/store").MemoizedSelector<AppState, boolean, import("@ngrx/store").DefaultProjectorFn<boolean>>;
export declare const selectIsUserLoaded: import("@ngrx/store").MemoizedSelector<AppState, boolean, import("@ngrx/store").DefaultProjectorFn<boolean>>;
export declare const selectAuthUser: import("@ngrx/store").MemoizedSelector<AppState, AuthUser, import("@ngrx/store").DefaultProjectorFn<AuthUser>>;
export declare const selectUserDetails: import("@ngrx/store").MemoizedSelector<AppState, import("@shared/models/user.model").User, import("@ngrx/store").DefaultProjectorFn<import("@shared/models/user.model").User>>;
export declare const selectUserTokenAccessEnabled: import("@ngrx/store").MemoizedSelector<AppState, boolean, import("@ngrx/store").DefaultProjectorFn<boolean>>;
export declare const selectHasRepository: import("@ngrx/store").MemoizedSelector<AppState, boolean, import("@ngrx/store").DefaultProjectorFn<boolean>>;
export declare const selectMvelEnabled: import("@ngrx/store").MemoizedSelector<AppState, boolean, import("@ngrx/store").DefaultProjectorFn<boolean>>;
export declare function getCurrentAuthState(store: Store<AppState>): AuthState;
export declare function getCurrentAuthUser(store: Store<AppState>): AuthUser;
